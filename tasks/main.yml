---
# tasks file for odoo

- name: install ubuntu packages
  apt:    
    name:
      - build-essential
      - git      
      - virtualenv
      - pipenv
      - poppler-utils
      - bzip2      
      - curl      
      - fonts-freefont-ttf
      - fonts-ubuntu
      - fontconfig
      - python3-dev
      - libcairo2-dev
      - libcups2-dev      
      - libffi-dev
      - libfontconfig-dev
      - libfreetype6-dev
      - libssl-dev
      - libldap-dev
      - libxml2-dev
      - libxslt1-dev
      - libpq-dev
      - libhttp-parser-dev
      - libsasl2-dev
      - libmagickwand-dev
    state: present

- name: copy imagemagick policy
  copy:
    src: files/ImageMagick-6/policy.xml
    dest: /etc/ImageMagick-6/policy.xml

- name: fetch odoo source
  become_user: "{{ odoo_user }}"
  become: yes
  git:
    repo: "{{ odoo_repo }}"
    dest: "{{ odoo_dir }}"
    version: "{{ odoo_version }}"
  register: res_odoo_source
  notify: update-odoo
  when: not odoo_checkout_local

- name: checkout local and transfer
  include: checkout_local.yml
  when: odoo_checkout_local

- name: update python environment
  become_user: "{{ odoo_user }}"
  become: yes
  when: res_odoo_source.changed
  shell: pipenv update
  tags: 
  - pipenv
  args:
    chdir: "{{ odoo_dir }}"
  notify: update-odoo
  
- name: check if ~/.local/etc exist  
  file:    
    path: "{{ odoo_user_home }}/.local/etc"
    recurse: yes
    state: directory
    group: "{{ odoo_user }}"
    owner: "{{ odoo_user }}"

- name: check if ~/log exist  
  file:    
    path: "{{ odoo_user_home }}/log"
    recurse: yes
    state: directory
    group: "{{ odoo_user }}"
    owner: "{{ odoo_user }}"

- name: copy odoo service config  
  template:
    src: templates/odoo.conf
    dest: "{{ odoo_user_home }}/.local/etc/{{ odoo_service }}.conf"
    group: "{{ odoo_user }}"
    owner: "{{ odoo_user }}"
  notify: update-odoo
        
- name: copy odoo-cron service config  
  template:
    src: templates/odoo-cron.conf
    dest: "{{ odoo_user_home }}/.local/etc/{{ odoo_service_cron }}.conf"
    group: "{{ odoo_user }}"
    owner: "{{ odoo_user }}"
  notify: update-odoo
    
- name: copy odoo service
  template:
    src: templates/odoo.service
    dest: /etc/systemd/system/{{ odoo_service }}.service
  notify: update-odoo

- name: copy odoo cron-service
  template:
    src: templates/odoo-cron.service
    dest: /etc/systemd/system/{{ odoo_service_cron }}.service
  notify: update-odoo